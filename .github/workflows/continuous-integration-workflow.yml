env:
  RUBY_VERSION: 2.6.x
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: safe_pg_migrations_test
  PGPASSWORD: postgres

name: CI
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  rubocop-test:
    name: Rubocop
    runs-on: ubuntu-18.04
    steps:
      - uses: doctolib/github-actions-checkout@v1
      - uses: doctolib/github-actions-setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - uses: doctolib/github-actions-cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: bundle
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Check code
        run: bundle exec rubocop
  unit-test:
    name: UnitTest
    runs-on: ubuntu-18.04
    # Service containers to run with `container-job`
    strategy:
      matrix:
        postgres: [ 9.6, 11.7 ]
        ruby: [ 2.5, 2.6, 2.7 ]
    services:
      postgres:
        image: postgres:${{ matrix.postgres }}
        env:
          POSTGRES_DB: safe_pg_migrations_test
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: doctolib/github-actions-checkout@v2
      - name: Set up Ruby
        uses: doctolib/github-actions-setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
      - uses: doctolib/github-actions-cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: bundle
        run: |
          gem install bundler:1.16.5
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Run tests
        run: bundle exec rake test
