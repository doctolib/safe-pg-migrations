env:
  RUBY_VERSION: 2.6
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: safe_pg_migrations_test
  PGPASSWORD: postgres

name: CI
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  rubocop-test:
    name: Rubocop
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - name: Check code
        run: bundle exec rubocop
  unit-test:
    name: UnitTest
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    strategy:
      matrix:
        postgres: [ 9.6, 11.7, 12.9, "12.10" ]
        ruby: [ 2.5, 2.6, 2.7, 3.0, 3.1 ]
    services:
      postgres:
        image: postgres:${{ matrix.postgres }}
        env:
          POSTGRES_DB: safe_pg_migrations_test
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - name: Run tests
        run: bundle exec rake test
  legacy-activerecord-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - ruby: "3.0"
            gemfile: gemfiles/activerecord61.gemfile
          - ruby: "3.0"
            gemfile: gemfiles/activerecord60.gemfile
          - ruby: 2.7
            gemfile: gemfiles/activerecord60.gemfile
          - ruby: 2.6
            gemfile: gemfiles/activerecord52.gemfile
    env:
      BUNDLE_GEMFILE: ${{ matrix.gemfile }}
    services:
      postgres:
        image: postgres:12.9
        env:
          POSTGRES_DB: safe_pg_migrations_test
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - name: Run tests
        run: bundle exec rake test
